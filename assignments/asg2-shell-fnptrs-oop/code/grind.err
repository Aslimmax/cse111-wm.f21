==28415== Memcheck, a memory error detector
==28415== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==28415== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==28415== Command: ./yshell
==28415== 
yshell: Bad: no such command
==28415== 
==28415== HEAP SUMMARY:
==28415==     in use at exit: 1,270 bytes in 33 blocks
==28415==   total heap usage: 347 allocs, 314 frees, 12,173 bytes allocated
==28415== 
==28415== 1,270 (48 direct, 1,222 indirect) bytes in 1 blocks are definitely lost in loss record 12 of 12
==28415==    at 0x4C2A483: operator new(unsigned long) (vg_replace_malloc.c:344)
==28415==    by 0x4178A8: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==28415==    by 0x417490: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)
==28415==    by 0x416DD5: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)
==28415==    by 0x4168FC: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(inode*&, std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:675)
==28415==    by 0x41656B: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:1342)
==28415==    by 0x4161D2: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr.h:359)
==28415==    by 0x415BBA: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:706)
==28415==    by 0x41552E: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:722)
==28415==    by 0x4137A4: inode_state::inode_state() (file_sys.cpp:26)
==28415==    by 0x419158: main (main.cpp:50)
==28415== 
==28415== LEAK SUMMARY:
==28415==    definitely lost: 48 bytes in 1 blocks
==28415==    indirectly lost: 1,222 bytes in 32 blocks
==28415==      possibly lost: 0 bytes in 0 blocks
==28415==    still reachable: 0 bytes in 0 blocks
==28415==         suppressed: 0 bytes in 0 blocks
==28415== 
==28415== For counts of detected and suppressed errors, rerun with: -v
==28415== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
